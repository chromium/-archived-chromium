/*
 * Copyright 2009, Google Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

namespace o3d {

%[
  A Function is a class that has an Evaluate method. Evaluate takes 1 input and
  returns 1 output.
%]
[nocpp, include="core/cross/function.h"]
class Function : NamedObject {
  %[
    Gets an output for this function for the given input.
    \param input Input to get output at.
    \return The output for the given input.
  %]
  [const, userglue] float Evaluate(float input);

  [verbatim=cpp_glue] %{
    float userglue_method_Evaluate(o3d::Function* self, float value) {
      return self->Evaluate(value, NULL);
    }
  %}
};  // Function

%[
  A Param which stores a Function.
%]
[nocpp, include="core/cross/function.h"] class ParamFunction : Param {
  %[
    The Function stored by the Param.
  %]
  [getter, setter] Function? value_;
};

%[
  A FunctionEval evaluates a Function through parameters.
%]
[nocpp, include="core/cross/function.h"]
class FunctionEval : ParamObject {
  %[
    The input to the function
  %]
  [getter, setter] float input;

  %[
    The output of the function for the given input.
  %]
  [getter] float output;

  %[
    The function to evaluate.
  %]
  [getter, setter] Function? function_object;
};  // FunctionEval

}  // namespace o3d


