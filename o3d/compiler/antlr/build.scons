# Copyright 2009, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Import('env')

env.Append(CPPPATH = env['RENDERER_INCLUDE_PATH'] + ['$ANTLRLIBC_DIR/include'])

if env.Bit('windows'):
  # force these files to be compiled as C
  env.Append(CCFLAGS = ['/TC'])

# Create the Antlr C Runtime library -------------------------------------------
antlr_sources = [
    'antlr3baserecognizer',
    'antlr3basetree',
    'antlr3basetreeadaptor',
    'antlr3bitset',
    'antlr3collections',
    'antlr3commontoken',
    'antlr3commontree',
    'antlr3commontreeadaptor',
    'antlr3commontreenodestream',
    'antlr3convertutf',
    'antlr3cyclicdfa',
    'antlr3debughandlers',
    'antlr3encodings',
    'antlr3exception',
    'antlr3filestream',
    'antlr3inputstream',
    'antlr3intstream',
    'antlr3lexer',
    'antlr3parser',
    'antlr3rewritestreams',
    'antlr3string',
    'antlr3stringstream',
    'antlr3tokenstream',
    'antlr3treeparser',
    'antlr3ucs2inputstream',
]
antlr_objects = env.MakeObjects(antlr_sources, '$ANTLRLIBC_DIR/src', 'c')

antlr_lib = env.ComponentLibrary('antlr3c', antlr_objects)
